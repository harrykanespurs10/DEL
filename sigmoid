import numpy as np
def sigmoid(v):
    return 1 / (1 + np.exp(-v))
def perceptronModel(x,w,b):
    v=np.dot(w,x) + b 
    y = sigmoid(v)
    return y 
     
def AND_logicFunction(x):
    w=np.array([1,1])
    b=-1.5
    return perceptronModel(x,w,b)
test1 = np.array([0,1])
test2 = np.array([1,0])
test3 = np.array([1,1])
test4 = np.array([0,0])
print("AND({}, {}) = {}".format(0,1,AND_logicFunction(test1)))
print("AND({}, {}) = {}".format(1,0,AND_logicFunction(test2)))
print("AND({}, {}) = {}".format(1,1,AND_logicFunction(test3)))
print("AND({}, {}) = {}".format(0,0,AND_logicFunction(test4)))
